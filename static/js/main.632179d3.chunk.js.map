{"version":3,"sources":["Components/CurrentPatient.js","Components/PatientWidget.js","Components/WaitingPatients.js","Components/PatientQueue.js","App.js","reportWebVitals.js","index.js"],"names":["CurrentPatient","currentName","currentDuration","currentDoctor","isNew","className","id","PatientWidget","name","waitTime","doctor","setCurrentName","setCurrentDuration","setCurrentDoctor","setIsNew","style","background","type","onClick","console","log","WaitingPatients","patientsArray","map","patient","PatientQueue","useState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.632179d3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction CurrentPatient({currentName, currentDuration, currentDoctor, isNew}) {\r\n\r\n    return (\r\n        <div className=\"current-patient-container\">\r\n            <h2>Current Patient</h2>\r\n            <div className={!currentName ? 'current-patient-card' : 'current-patient-card active'}>\r\n                {isNew ? <p id=\"new-patient-indicator\">NEW PATIENT</p> : null }\r\n\r\n                <h3>PATIENT</h3>\r\n                <p id=\"patient-name\">{!currentName ? 'N/A' : currentName}</p>\r\n\r\n                <h4>DURATION</h4>\r\n                <p>{!currentDuration ? 'N/A' : currentDuration}</p>\r\n\r\n                <h4>ATTENDING DOCTOR</h4>\r\n                <p>{!currentDoctor ? 'N/A' : currentDoctor}</p>\r\n\r\n                <div className=\"current-patient-buttons\">\r\n                    <div className=\"top-buttons\">\r\n                        <button>COPY INFO</button>\r\n                        <button>VIEW INFO</button>\r\n                    </div>\r\n\r\n                    <button id=\"discharge-button\">DISCHARGE PATIENT</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CurrentPatient\r\n","import React, {useState} from 'react'\r\nimport {FaTimes} from 'react-icons/fa'\r\n\r\nfunction PatientWidget({name, waitTime, doctor, isNew, setCurrentName, setCurrentDuration, setCurrentDoctor, setIsNew}) {\r\n\r\n    function handleClick(){\r\n        setCurrentName(name)\r\n        setCurrentDuration(waitTime)\r\n        setCurrentDoctor(doctor)\r\n        setIsNew(isNew)\r\n        console.log()\r\n    }\r\n\r\n    function deletePatient(){\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"patient-widget\" style={{background : isNew ? 'linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(247,216,107,1) 0%, rgba(247,216,107,1) 4%, rgba(255,255,255,1) 4%)' : 'white'}}>\r\n            <div className=\"patient-widget-name\">\r\n                <h3>PATIENT</h3>\r\n                <p>{name}</p>\r\n            </div>\r\n\r\n            <div>\r\n                <h3>WAIT TIME</h3>\r\n                <p>{waitTime}</p>\r\n            </div>\r\n\r\n            <button type=\"button\" onClick={handleClick}>SEE PATIENT</button>\r\n\r\n            <FaTimes id=\"remove-icon\" onClick={deletePatient}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientWidget\r\n","import React from 'react'\r\nimport PatientWidget from './PatientWidget'\r\n\r\nfunction WaitingPatients({patientsArray, currentName, setCurrentName, currentDuration, setCurrentDuration, setCurrentDoctor, setIsNew}) {\r\n   \r\n    return (\r\n        <div className=\"waiting-patients-container\">\r\n            <h2>10 Patients Waiting</h2>\r\n            <div>\r\n                {patientsArray.map(patient => <PatientWidget \r\n                    name={patient.name} \r\n                    waitTime={patient.waitTime} \r\n                    isNew={patient.isNew} \r\n                    doctor={patient.doctor} \r\n                    currentName={currentName} \r\n                    setCurrentName={setCurrentName} \r\n                    currentDuration={currentDuration} \r\n                    setCurrentDoctor={setCurrentDoctor} \r\n                    setCurrentDuration={setCurrentDuration}\r\n                    setIsNew={setIsNew}/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WaitingPatients\r\n","import React, {useState} from 'react'\r\nimport CurrentPatient from './CurrentPatient'\r\nimport WaitingPatients from './WaitingPatients'\r\n\r\nfunction PatientQueue({patientsArray}) {\r\n    const [currentName, setCurrentName] = useState('')\r\n    const [currentDuration, setCurrentDuration] = useState('')\r\n    const [currentDoctor, setCurrentDoctor] = useState('')\r\n    const [isNew, setIsNew] = useState('')\r\n    return (\r\n        <div>\r\n            <h1 id=\"patient-queue-title\">Patient Queue</h1>\r\n            <div className=\"patient-queue-container\">\r\n                <CurrentPatient \r\n                    patientsArray={patientsArray} \r\n                    currentName={currentName}  \r\n                    currentDuration={currentDuration} \r\n                    currentDoctor={currentDoctor} \r\n                    isNew={isNew}/>\r\n                <WaitingPatients \r\n                    patientsArray={patientsArray} \r\n                    currentName={currentName}  \r\n                    currentDuration={currentDuration} \r\n                    currentDoctor={currentDoctor} \r\n                    setCurrentName={setCurrentName} \r\n                    setCurrentDuration={setCurrentDuration} \r\n                    setCurrentDoctor={setCurrentDoctor}\r\n                    setIsNew={setIsNew}/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PatientQueue\r\n","import React from 'react'\nimport './Style/style.scss'\nimport PatientQueue from './Components/PatientQueue'\n\nfunction App() {\n  let patientsArray = [\n    {\n        \"id\" : \"1\",\n        \"name\" : \"John Doe\",\n        \"waitTime\" : \"0:11\",\n        \"isNew\": false,\n        \"doctor\": \"Dr. Strange\"\n    },\n    {\n        \"id\" : \"2\",\n        \"name\" : \"Bruce Wayne\",\n        \"waitTime\" : \"0:20\",\n        \"isNew\": true,\n        \"doctor\": \"Dr. Who\"\n    },\n    {\n        \"id\" : \"3\",\n        \"name\" : \"Tony Stark\",\n        \"waitTime\" : \"0:01\",\n        \"isNew\": true,\n        \"doctor\": \"Dr. Who\"\n    },\n    {\n        \"id\" : \"4\",\n        \"name\" : \"Frodo Baggins\",\n        \"waitTime\" : \"0:33\",\n        \"isNew\": false,\n        \"doctor\": \"Dr. Wu\"\n    },\n    {\n        \"id\" : \"5\",\n        \"name\" : \"Sarah Connor\",\n        \"waitTime\" : \"2:11\",\n        \"isNew\": false,\n        \"doctor\": \"Dr. House\"\n    },\n    {\n        \"id\" : \"6\",\n        \"name\" : \"Ellen Ripley\",\n        \"waitTime\" : \"5:31\",\n        \"isNew\": false,\n        \"doctor\": \"Dr. House\"\n    },\n    {\n        \"id\" : \"7\",\n        \"name\" : \"John Rambo\",\n        \"waitTime\" : \"0:41\",\n        \"isNew\": true,\n        \"doctor\": \"Dr. Strange\"\n    },\n    {\n        \"id\" : \"8\",\n        \"name\" : \"Jack Sparrow\",\n        \"waitTime\" : \"1:27\",\n        \"isNew\": false,\n        \"doctor\": \"Dr. Phil\"\n    },\n    {\n        \"id\" : \"9\",\n        \"name\" : \"Dwight Schrute\",\n        \"waitTime\" : \"1:01\",\n        \"isNew\": false,\n        \"doctor\": \"Dr. Who\"\n    },\n    {\n        \"id\" : \"10\",\n        \"name\" : \"Dennis Reynolds\",\n        \"waitTime\" : \"6:66\",\n        \"isNew\": false,\n        \"doctor\": \"Dr. Strange\"\n    },\n]\n\n  return (\n    <div className=\"app\">\n      <PatientQueue patientsArray={patientsArray}/>\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}